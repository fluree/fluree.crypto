["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Uint8Array",["^ "],"~$window",["^ ","~$crypto",["^ ","~$getRandomValues",["^ "]]],"~$Error",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$fluree.crypto.scrypt","~:imports",null,"~:requires",["^ ","~$alphabase","~$alphabase.core","^@","^@","~$crypt","~$sjcl.crypt.scrypt","^B","^B","~$codecBytes","~$sjcl.codec.bytes","^D","^D","~$goog.object","^E"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$random-bytes",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/bplatz/fluree/fluree.crypto/src/fluree/crypto/scrypt.cljc","~:line",12,"~:column",7,"~:end-line",12,"~:end-column",19,"~:arglists",["~#list",["~$quote",["^R",[["~$size"]]]]],"~:doc","Returns a random byte array of the specified size.\n  NOTE: This will only work in the browser, not for node.js"],"^;","~$fluree.crypto.scrypt/random-bytes","^L","src/fluree/crypto/scrypt.cljc","^P",19,"~:method-params",["^R",[["^T"]]],"~:protocol-impl",null,"~:arglists-meta",["^R",[null,null]],"^N",1,"~:variadic?",false,"^M",12,"~:ret-tag","~$js/Uint8Array","^O",12,"~:max-fixed-arity",1,"~:fn-var",true,"^Q",["^R",["^S",["^R",[["^T"]]]]],"^U","Returns a random byte array of the specified size.\n  NOTE: This will only work in the browser, not for node.js"],"~$encrypt",["^ ","^J",null,"^K",["^ ","^L","/Users/bplatz/fluree/fluree.crypto/src/fluree/crypto/scrypt.cljc","^M",23,"^N",7,"^O",23,"^P",14,"^Q",["^R",["^S",["^R",[["~$raw"],["^14","~$salt"],["^14","^15","~$n"],["^14","^15","~$n","~$r","~$p"],["^14","^15","~$n","~$r","~$p","~$dk-len"]]]]],"^U","Encrypts message (bytes) using salt (bytes).\n  Returns encrypted message in bytes directly.\n\n  Note verification of message will require the identical salt, n, r, p used\n  by the original encryption.","~:top-fn",["^ ","^Z",false,"~:fixed-arity",6,"^11",6,"^W",["^R",[["^14"],["^14","^15"],["^14","^15","~$n"],["^14","^15","~$n","~$r","~$p"],["^14","^15","~$n","~$r","~$p","^16"]]],"^Q",["^R",[["^14"],["^14","^15"],["^14","^15","~$n"],["^14","^15","~$n","~$r","~$p"],["^14","^15","~$n","~$r","~$p","^16"]]],"^Y",["^R",[null,null,null,null,null]]]],"^;","~$fluree.crypto.scrypt/encrypt","^L","src/fluree/crypto/scrypt.cljc","^P",14,"^17",["^ ","^Z",false,"^18",6,"^11",6,"^W",["^R",[["^14"],["^14","^15"],["^14","^15","~$n"],["^14","^15","~$n","~$r","~$p"],["^14","^15","~$n","~$r","~$p","^16"]]],"^Q",["^R",[["^14"],["^14","^15"],["^14","^15","~$n"],["^14","^15","~$n","~$r","~$p"],["^14","^15","~$n","~$r","~$p","^16"]]],"^Y",["^R",[null,null,null,null,null]]],"^W",["^R",[["^14"],["^14","^15"],["^14","^15","~$n"],["^14","^15","~$n","~$r","~$p"],["^14","^15","~$n","~$r","~$p","^16"]]],"^X",null,"^18",6,"^Y",["^R",[null,null,null,null,null]],"^N",1,"^Z",false,"~:methods",[["^ ","^18",1,"^Z",false,"~:tag","~$any"],["^ ","^18",2,"^Z",false,"^1;","^1<"],["^ ","^18",3,"^Z",false,"^1;","^1<"],["^ ","^18",5,"^Z",false,"^1;","^1<"],["^ ","^18",6,"^Z",false,"^1;","^1<"]],"^M",23,"^O",23,"^11",6,"^12",true,"^Q",["^R",[["^14"],["^14","^15"],["^14","^15","~$n"],["^14","^15","~$n","~$r","~$p"],["^14","^15","~$n","~$r","~$p","^16"]]],"^U","Encrypts message (bytes) using salt (bytes).\n  Returns encrypted message in bytes directly.\n\n  Note verification of message will require the identical salt, n, r, p used\n  by the original encryption."],"~$check",["^ ","^J",null,"^K",["^ ","^L","/Users/bplatz/fluree/fluree.crypto/src/fluree/crypto/scrypt.cljc","^M",46,"^N",7,"^O",46,"^P",12,"^Q",["^R",["^S",["^R",[["^14","~$encrypted","^15"],["^14","^1>","^15","~$n","~$r","~$p"]]]]],"^U","Compare raw message (bytes) with previously encrypted (bytes) that was\n  encrypted with the provided salt, n, r and p.\n  Returns true or false.","^17",["^ ","^Z",false,"^18",6,"^11",6,"^W",["^R",[["^14","^1>","^15"],["^14","^1>","^15","~$n","~$r","~$p"]]],"^Q",["^R",[["^14","^1>","^15"],["^14","^1>","^15","~$n","~$r","~$p"]]],"^Y",["^R",[null,null]]]],"^;","~$fluree.crypto.scrypt/check","^L","src/fluree/crypto/scrypt.cljc","^P",12,"^17",["^ ","^Z",false,"^18",6,"^11",6,"^W",["^R",[["^14","^1>","^15"],["^14","^1>","^15","~$n","~$r","~$p"]]],"^Q",["^R",[["^14","^1>","^15"],["^14","^1>","^15","~$n","~$r","~$p"]]],"^Y",["^R",[null,null]]],"^W",["^R",[["^14","^1>","^15"],["^14","^1>","^15","~$n","~$r","~$p"]]],"^X",null,"^18",6,"^Y",["^R",[null,null]],"^N",1,"^Z",false,"^1:",[["^ ","^18",3,"^Z",false,"^1;","^1<"],["^ ","^18",6,"^Z",false,"^1;","^1<"]],"^M",46,"^O",46,"^11",6,"^12",true,"^Q",["^R",[["^14","^1>","^15"],["^14","^1>","^15","~$n","~$r","~$p"]]],"^U","Compare raw message (bytes) with previously encrypted (bytes) that was\n  encrypted with the provided salt, n, r and p.\n  Returns true or false."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"^U",null]