["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$fluree.crypto.ecc","~:imports",null,"~:requires",["^ ","~$alphabase","~$alphabase.core","^<","^<","~$ecc","~$sjcl.ecc","^>","^>","~$bn","~$sjcl.bn","^@","^@","~$codecHex","~$sjcl.codec.hex","^B","^B"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$secp256k1",["^ ","~:meta",["^ ","~:file","/Users/bplatz/fluree/fluree.crypto/src/fluree/crypto/ecc.cljc","~:line",11,"~:column",20,"~:end-line",11,"~:end-column",29,"~:private",true],"^M",true,"^7","~$fluree.crypto.ecc/secp256k1","^H","src/fluree/crypto/ecc.cljc","^L",29,"^J",1,"^I",11,"^K",11,"~:tag","~$any"],"~$pad-hex",["^ ","~:protocol-inline",null,"^G",["^ ","^H","/Users/bplatz/fluree/fluree.crypto/src/fluree/crypto/ecc.cljc","^I",20,"^J",17,"^K",20,"^L",24,"^M",true,"~:arglists",["~#list",["~$quote",["^T",[["~$hex"]]]]],"~:doc","Pads a hex value with a leading zero if odd."],"^M",true,"^7","~$fluree.crypto.ecc/pad-hex","^H","src/fluree/crypto/ecc.cljc","^L",24,"~:method-params",["^T",[["^V"]]],"~:protocol-impl",null,"~:arglists-meta",["^T",[null,null]],"^J",1,"~:variadic?",false,"^I",20,"~:ret-tag",["^6",[null,"~$string"]],"^K",20,"~:max-fixed-arity",1,"~:fn-var",true,"^S",["^T",["^U",["^T",[["^V"]]]]],"^W","Pads a hex value with a leading zero if odd."],"~$biginteger->hex",["^ ","^R",null,"^G",["^ ","^H","/Users/bplatz/fluree/fluree.crypto/src/fluree/crypto/ecc.cljc","^I",27,"^J",8,"^K",27,"^L",23,"^M",true,"^S",["^T",["^U",["^T",[["^?"]]]]],"^W","Hex-encode java.math.BigInteger (clj) or sjcl.bn (cljs)."],"^M",true,"^7","~$fluree.crypto.ecc/biginteger->hex","^H","src/fluree/crypto/ecc.cljc","^L",23,"^Y",["^T",[["^?"]]],"^Z",null,"^[",["^T",[null,null]],"^J",1,"^10",false,"^I",27,"^11",["^6",[null,"^12"]],"^K",27,"^13",1,"^14",true,"^S",["^T",["^U",["^T",[["^?"]]]]],"^W","Hex-encode java.math.BigInteger (clj) or sjcl.bn (cljs)."],"~$valid-private?",["^ ","^R",null,"^G",["^ ","^H","/Users/bplatz/fluree/fluree.crypto/src/fluree/crypto/ecc.cljc","^I",34,"^J",7,"^K",34,"^L",21,"^S",["^T",["^U",["^T",[["~$private"]]]]],"^W","Returns true if private key, as big number/integer, is valid.\n  Private key must be >= 1 and <= curve modulus."],"^7","~$fluree.crypto.ecc/valid-private?","^H","src/fluree/crypto/ecc.cljc","^L",21,"^Y",["^T",[["^18"]]],"^Z",null,"^[",["^T",[null,null]],"^J",1,"^10",false,"^I",34,"^11","^P","^K",34,"^13",1,"^14",true,"^S",["^T",["^U",["^T",[["^18"]]]]],"^W","Returns true if private key, as big number/integer, is valid.\n  Private key must be >= 1 and <= curve modulus."],"~$x962-encode",["^ ","^R",null,"^G",["^ ","^H","/Users/bplatz/fluree/fluree.crypto/src/fluree/crypto/ecc.cljc","^I",45,"^J",7,"^K",45,"^L",18,"^S",["^T",["^U",["^T",[["~$x-coord","~$y-coord"],["^1;","^1<","~$compressed?"]]]]],"^W","Encodes x and y coords in hex to X9.62 with optional compression (default true).\n  x coords and y coords should be supplied in hex format.","~:top-fn",["^ ","^10",false,"~:fixed-arity",3,"^13",3,"^Y",["^T",[["^1;","^1<"],["^1;","^1<","^1="]]],"^S",["^T",[["^1;","^1<"],["^1;","^1<","^1="]]],"^[",["^T",[null,null]]]],"^7","~$fluree.crypto.ecc/x962-encode","^H","src/fluree/crypto/ecc.cljc","^L",18,"^1>",["^ ","^10",false,"^1?",3,"^13",3,"^Y",["^T",[["^1;","^1<"],["^1;","^1<","^1="]]],"^S",["^T",[["^1;","^1<"],["^1;","^1<","^1="]]],"^[",["^T",[null,null]]],"^Y",["^T",[["^1;","^1<"],["^1;","^1<","^1="]]],"^Z",null,"^1?",3,"^[",["^T",[null,null]],"^J",1,"^10",false,"~:methods",[["^ ","^1?",2,"^10",false,"^O","^P"],["^ ","^1?",3,"^10",false,"^O","^12"]],"^I",45,"^K",45,"^13",3,"^14",true,"^S",["^T",[["^1;","^1<"],["^1;","^1<","^1="]]],"^W","Encodes x and y coords in hex to X9.62 with optional compression (default true).\n  x coords and y coords should be supplied in hex format."],"~$format-key-pair",["^ ","^R",null,"^G",["^ ","^H","/Users/bplatz/fluree/fluree.crypto/src/fluree/crypto/ecc.cljc","^I",61,"^J",7,"^K",61,"^L",22,"^S",["^T",["^U",["^T",[["~$pair"]]]]],"^W","Takes internal representation of a key-pair and returns X9.62 compressed encoded\n  public key and private key as a map, with each value hex encoded."],"^7","~$fluree.crypto.ecc/format-key-pair","^H","src/fluree/crypto/ecc.cljc","^L",22,"^Y",["^T",[["^1C"]]],"^Z",null,"^[",["^T",[null,null]],"^J",1,"^10",false,"^I",61,"^11","^P","^K",61,"^13",1,"^14",true,"^S",["^T",["^U",["^T",[["^1C"]]]]],"^W","Takes internal representation of a key-pair and returns X9.62 compressed encoded\n  public key and private key as a map, with each value hex encoded."],"~$generate-key-pair*",["^ ","^R",null,"^G",["^ ","^H","/Users/bplatz/fluree/fluree.crypto/src/fluree/crypto/ecc.cljc","^I",78,"^J",7,"^K",78,"^L",25,"^S",["^T",["^U",["^T",[[],["^18"]]]]],"^W","Generates an internal representation of key pair from a secure random seed or provided private key.\n  Returns map/object with two keys:\n   - public  - a big number/integer\n   - private - a curve point","^1>",["^ ","^10",false,"^1?",1,"^13",1,"^Y",["^T",[[],["^18"]]],"^S",["^T",[[],["^18"]]],"^[",["^T",[null,null]]]],"^7","~$fluree.crypto.ecc/generate-key-pair*","^H","src/fluree/crypto/ecc.cljc","^L",25,"^1>",["^ ","^10",false,"^1?",1,"^13",1,"^Y",["^T",[[],["^18"]]],"^S",["^T",[[],["^18"]]],"^[",["^T",[null,null]]],"^Y",["^T",[[],["^18"]]],"^Z",null,"^1?",1,"^[",["^T",[null,null]],"^J",1,"^10",false,"^1A",[["^ ","^1?",0,"^10",false,"^O","^P"],["^ ","^1?",1,"^10",false,"^O","~$object"]],"^I",78,"^K",78,"^13",1,"^14",true,"^S",["^T",[[],["^18"]]],"^W","Generates an internal representation of key pair from a secure random seed or provided private key.\n  Returns map/object with two keys:\n   - public  - a big number/integer\n   - private - a curve point"],"~$generate-key-pair",["^ ","^R",null,"^G",["^ ","^H","/Users/bplatz/fluree/fluree.crypto/src/fluree/crypto/ecc.cljc","^L",33,"^1>",["^ ","^10",false,"^1?",1,"^13",1,"^Y",["^T",[[],["^18"]]],"^S",["^T",[[],["^18"]]],"^[",["^T",[null,null]]],"~:export",true,"^J",16,"^I",105,"^K",105,"^S",["^T",["^U",["^T",[[],["^18"]]]]],"^W","Returns key pair in hex format using X9.62 compressed encoding for public key."],"^7","~$fluree.crypto.ecc/generate-key-pair","^H","src/fluree/crypto/ecc.cljc","^L",33,"^1>",["^ ","^10",false,"^1?",1,"^13",1,"^Y",["^T",[[],["^18"]]],"^S",["^T",[[],["^18"]]],"^[",["^T",[null,null]]],"^Y",["^T",[[],["^18"]]],"^Z",null,"^1?",1,"^1I",true,"^[",["^T",[null,null]],"^J",1,"^10",false,"^1A",[["^ ","^1?",0,"^10",false,"^O","^P"],["^ ","^1?",1,"^10",false,"^O","^P"]],"^I",105,"^K",105,"^13",1,"^14",true,"^S",["^T",[[],["^18"]]],"^W","Returns key pair in hex format using X9.62 compressed encoding for public key."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^6",["^M","~:public"]],"~:order",["^M","^1O"]],"^W",null]