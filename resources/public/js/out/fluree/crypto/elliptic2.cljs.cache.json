["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "],"~$parseInt",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$fluree.crypto.elliptic2","~:imports",null,"~:requires",["^ ","~$ecc","~$sjcl.ecc","~$alphabase.core","^>","~$sjcl.bn","^?","~$bitArray","~$sjcl.bitArray","^=","^=","~$codecBytes","~$sjcl.codec.bytes","^A","^A","^C","^C","~$bn","^?","~$alphabase","^>","~$sjcl.hash.ripemd160","^F","~$sjcl.hash.sha256","^G","~$sha256","^G"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$to-bitArray",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/bplatz/fluree/fluree.crypto/src/fluree/crypto/elliptic2.cljs","~:line",10,"~:column",7,"~:end-line",10,"~:end-column",18,"~:arglists",["~#list",["~$quote",["^U",[["~$x","~$format"]]]]]],"^8","~$fluree.crypto.elliptic2/to-bitArray","^O","src/fluree/crypto/elliptic2.cljs","^S",18,"~:method-params",["^U",[["~$x","^W"]]],"~:protocol-impl",null,"~:arglists-meta",["^U",[null,null]],"^Q",1,"~:variadic?",false,"^P",10,"~:ret-tag","~$any","^R",10,"~:max-fixed-arity",2,"~:fn-var",true,"^T",["^U",["^V",["^U",[["~$x","^W"]]]]]],"~$generate-key-pair*",["^ ","^M",null,"^N",["^ ","^O","/Users/bplatz/fluree/fluree.crypto/src/fluree/crypto/elliptic2.cljs","^P",181,"^Q",7,"^R",181,"^S",25,"^T",["^U",["^V",["^U",[[]]]]],"~:doc","Returns internal representation of keypair"],"^8","~$fluree.crypto.elliptic2/generate-key-pair*","^O","src/fluree/crypto/elliptic2.cljs","^S",25,"^Y",["^U",[[]]],"^Z",null,"^[",["^U",[null,null]],"^Q",1,"^10",false,"^P",181,"^11","^12","^R",181,"^13",0,"^14",true,"^T",["^U",["^V",["^U",[[]]]]],"^16","Returns internal representation of keypair"],"~$x962-encode",["^ ","^M",null,"^N",["^ ","^O","/Users/bplatz/fluree/fluree.crypto/src/fluree/crypto/elliptic2.cljs","^P",22,"^Q",7,"^R",22,"^S",18,"^T",["^U",["^V",["^U",[["~$pub-key"],["^19","~$compressed?"]]]]],"^16","Encode a sjcl.ecc.point using X9.62 compression.","~:top-fn",["^ ","^10",false,"~:fixed-arity",2,"^13",2,"^Y",["^U",[["^19"],["^19","^1:"]]],"^T",["^U",[["^19"],["^19","^1:"]]],"^[",["^U",[null,null]]]],"^8","~$fluree.crypto.elliptic2/x962-encode","^O","src/fluree/crypto/elliptic2.cljs","^S",18,"^1;",["^ ","^10",false,"^1<",2,"^13",2,"^Y",["^U",[["^19"],["^19","^1:"]]],"^T",["^U",[["^19"],["^19","^1:"]]],"^[",["^U",[null,null]]],"^Y",["^U",[["^19"],["^19","^1:"]]],"^Z",null,"^1<",2,"^[",["^U",[null,null]],"^Q",1,"^10",false,"~:methods",[["^ ","^1<",1,"^10",false,"~:tag","^12"],["^ ","^1<",2,"^10",false,"^1?","^12"]],"^P",22,"^R",22,"^13",2,"^14",true,"^T",["^U",[["^19"],["^19","^1:"]]],"^16","Encode a sjcl.ecc.point using X9.62 compression."],"~$compute-point",["^ ","^M",null,"^N",["^ ","^O","/Users/bplatz/fluree/fluree.crypto/src/fluree/crypto/elliptic2.cljs","^P",129,"^Q",7,"^R",129,"^S",20,"^T",["^U",["^V",["^U",[["~$y-even?","~$x"]]]]],"^16","Compute an elliptic curve point for a y-coordinate parity and x-coordinate"],"^8","~$fluree.crypto.elliptic2/compute-point","^O","src/fluree/crypto/elliptic2.cljs","^S",20,"^Y",["^U",[["^1A","~$x"]]],"^Z",null,"^[",["^U",[null,null]],"^Q",1,"^10",false,"^P",129,"^11","~$object","^R",129,"^13",2,"^14",true,"^T",["^U",["^V",["^U",[["^1A","~$x"]]]]],"^16","Compute an elliptic curve point for a y-coordinate parity and x-coordinate"],"~$sign",["^ ","^M",null,"^N",["^ ","^O","/Users/bplatz/fluree/fluree.crypto/src/fluree/crypto/elliptic2.cljs","^P",221,"^Q",7,"^R",221,"^S",11,"^T",["^U",["^V",["^U",[["~$pair","~$message"]]]]]],"^8","~$fluree.crypto.elliptic2/sign","^O","src/fluree/crypto/elliptic2.cljs","^S",11,"^Y",["^U",[["^1E","^1F"]]],"^Z",null,"^[",["^U",[null,null]],"^Q",1,"^10",false,"^P",221,"^11","^12","^R",221,"^13",2,"^14",true,"^T",["^U",["^V",["^U",[["^1E","^1F"]]]]]],"~$generate-address-pair",["^ ","^M",null,"^N",["^ ","^O","/Users/bplatz/fluree/fluree.crypto/src/fluree/crypto/elliptic2.cljs","^P",214,"^Q",7,"^R",214,"^S",28,"^T",["^U",["^V",["^U",[[]]]]],"^16","Generate a new key pair, returns encoded values."],"^8","~$fluree.crypto.elliptic2/generate-address-pair","^O","src/fluree/crypto/elliptic2.cljs","^S",28,"^Y",["^U",[[]]],"^Z",null,"^[",["^U",[null,null]],"^Q",1,"^10",false,"^P",214,"^11","^1C","^R",214,"^13",0,"^14",true,"^T",["^U",["^V",["^U",[[]]]]],"^16","Generate a new key pair, returns encoded values."],"~$private",["^ ","^M",null,"^N",["^ ","^O","/Users/bplatz/fluree/fluree.crypto/src/fluree/crypto/elliptic2.cljs","^P",197,"^Q",7,"^R",197,"^S",14,"^T",["^U",["^V",["^U",[["^1E"]]]]],"^16","Returns private key as byte array from key pair."],"^8","~$fluree.crypto.elliptic2/private","^O","src/fluree/crypto/elliptic2.cljs","^S",14,"^Y",["^U",[["^1E"]]],"^Z",null,"^[",["^U",[null,null]],"^Q",1,"^10",false,"^P",197,"^11","^12","^R",197,"^13",1,"^14",true,"^T",["^U",["^V",["^U",[["^1E"]]]]],"^16","Returns private key as byte array from key pair."],"~$bn-even?",["^ ","^M",null,"^N",["^ ","^O","/Users/bplatz/fluree/fluree.crypto/src/fluree/crypto/elliptic2.cljs","^P",16,"^Q",8,"^R",16,"^S",16,"~:private",true,"^T",["^U",["^V",["^U",[["^D"]]]]],"^16","Returns true/false if big number is even."],"^1M",true,"^8","~$fluree.crypto.elliptic2/bn-even?","^O","src/fluree/crypto/elliptic2.cljs","^S",16,"^Y",["^U",[["^D"]]],"^Z",null,"^[",["^U",[null,null]],"^Q",1,"^10",false,"^P",16,"^11","^12","^R",16,"^13",1,"^14",true,"^T",["^U",["^V",["^U",[["^D"]]]]],"^16","Returns true/false if big number is even."],"~$x962-hex-compressed-decode",["^ ","^M",null,"^N",["^ ","^O","/Users/bplatz/fluree/fluree.crypto/src/fluree/crypto/elliptic2.cljs","^P",145,"^Q",8,"^R",145,"^S",34,"^1M",true,"^T",["^U",["^V",["^U",[["~$key-hex"]]]]],"^16","Key as bytes"],"^1M",true,"^8","~$fluree.crypto.elliptic2/x962-hex-compressed-decode","^O","src/fluree/crypto/elliptic2.cljs","^S",34,"^Y",["^U",[["^1P"]]],"^Z",null,"^[",["^U",[null,null]],"^Q",1,"^10",false,"^P",145,"^11","^1C","^R",145,"^13",1,"^14",true,"^T",["^U",["^V",["^U",[["^1P"]]]]],"^16","Key as bytes"],"~$x962-decode",["^ ","^M",null,"^N",["^ ","^O","/Users/bplatz/fluree/fluree.crypto/src/fluree/crypto/elliptic2.cljs","^P",162,"^Q",7,"^R",162,"^S",18,"^T",["^U",["^V",["^U",[["~$key-ba"]]]]],"^16","Decode a X9.62 encoded public key provided in bytes"],"^8","~$fluree.crypto.elliptic2/x962-decode","^O","src/fluree/crypto/elliptic2.cljs","^S",18,"^Y",["^U",[["^1S"]]],"^Z",null,"^[",["^U",[null,null]],"^Q",1,"^10",false,"^P",162,"^11",["^7",["^1C","~$cljs.core/IMap"]],"^R",162,"^13",1,"^14",true,"^T",["^U",["^V",["^U",[["^1S"]]]]],"^16","Decode a X9.62 encoded public key provided in bytes"],"~$encode-key-pair",["^ ","^M",null,"^N",["^ ","^O","/Users/bplatz/fluree/fluree.crypto/src/fluree/crypto/elliptic2.cljs","^P",187,"^Q",7,"^R",187,"^S",22,"^T",["^U",["^V",["^U",[["^1E"]]]]],"^16","Encodes a key pair in specified format."],"^8","~$fluree.crypto.elliptic2/encode-key-pair","^O","src/fluree/crypto/elliptic2.cljs","^S",22,"^Y",["^U",[["^1E"]]],"^Z",null,"^[",["^U",[null,null]],"^Q",1,"^10",false,"^P",187,"^11","^1C","^R",187,"^13",1,"^14",true,"^T",["^U",["^V",["^U",[["^1E"]]]]],"^16","Encodes a key pair in specified format."],"~$public",["^ ","^M",null,"^N",["^ ","^O","/Users/bplatz/fluree/fluree.crypto/src/fluree/crypto/elliptic2.cljs","^P",205,"^Q",7,"^R",205,"^S",13,"^T",["^U",["^V",["^U",[["^1E"]]]]],"^16","Returns public key as byte array using X9.62 compression."],"^8","~$fluree.crypto.elliptic2/public","^O","src/fluree/crypto/elliptic2.cljs","^S",13,"^Y",["^U",[["^1E"]]],"^Z",null,"^[",["^U",[null,null]],"^Q",1,"^10",false,"^P",205,"^11","^12","^R",205,"^13",1,"^14",true,"^T",["^U",["^V",["^U",[["^1E"]]]]],"^16","Returns public key as byte array using X9.62 compression."],"~$modular-square-root",["^ ","^M",null,"^N",["^ ","^O","/Users/bplatz/fluree/fluree.crypto/src/fluree/crypto/elliptic2.cljs","^P",43,"^Q",7,"^R",43,"^S",26,"^T",["^U",["^V",["^U",[["~$n","~$modulus"]]]]],"^16","Compute the square root of a number modulo a prime.\n  Number and modulus should be big numbers (bn)."],"^8","~$fluree.crypto.elliptic2/modular-square-root","^O","src/fluree/crypto/elliptic2.cljs","^S",26,"^Y",["^U",[["~$n","^1["]]],"^Z",null,"^[",["^U",[null,null]],"^Q",1,"^10",false,"^P",43,"^11","^12","^R",43,"^13",2,"^14",true,"^T",["^U",["^V",["^U",[["~$n","^1["]]]]],"^16","Compute the square root of a number modulo a prime.\n  Number and modulus should be big numbers (bn)."],"~$x962-hex-uncompressed-decode",["^ ","^M",null,"^N",["^ ","^O","/Users/bplatz/fluree/fluree.crypto/src/fluree/crypto/elliptic2.cljs","^P",153,"^Q",8,"^R",153,"^S",36,"^1M",true,"^T",["^U",["^V",["^U",[["~$encoded-key"]]]]]],"^1M",true,"^8","~$fluree.crypto.elliptic2/x962-hex-uncompressed-decode","^O","src/fluree/crypto/elliptic2.cljs","^S",36,"^Y",["^U",[["^22"]]],"^Z",null,"^[",["^U",[null,null]],"^Q",1,"^10",false,"^P",153,"^11","^1U","^R",153,"^13",1,"^14",true,"^T",["^U",["^V",["^U",[["^22"]]]]]],"~$verify",["^ ","^M",null,"^N",["^ ","^O","/Users/bplatz/fluree/fluree.crypto/src/fluree/crypto/elliptic2.cljs","^P",227,"^Q",7,"^R",227,"^S",13,"^T",["^U",["^V",["^U",[["^1E","^1F","~$sig"]]]]]],"^8","~$fluree.crypto.elliptic2/verify","^O","src/fluree/crypto/elliptic2.cljs","^S",13,"^Y",["^U",[["^1E","^1F","^25"]]],"^Z",null,"^[",["^U",[null,null]],"^Q",1,"^10",false,"^P",227,"^11","^12","^R",227,"^13",3,"^14",true,"^T",["^U",["^V",["^U",[["^1E","^1F","^25"]]]]]],"~$generate-key-pair-from-private",["^ ","^M",null,"^N",["^ ","^O","/Users/bplatz/fluree/fluree.crypto/src/fluree/crypto/elliptic2.cljs","^P",233,"^Q",7,"^R",233,"^S",37,"^T",["^U",["^V",["^U",[["^1J"],["~$private-key","^W"]]]]],"^1;",["^ ","^10",false,"^1<",2,"^13",2,"^Y",["^U",[["^1J"],["^28","^W"]]],"^T",["^U",[["^1J"],["^28","^W"]]],"^[",["^U",[null,null]]]],"^8","~$fluree.crypto.elliptic2/generate-key-pair-from-private","^O","src/fluree/crypto/elliptic2.cljs","^S",37,"^1;",["^ ","^10",false,"^1<",2,"^13",2,"^Y",["^U",[["^1J"],["^28","^W"]]],"^T",["^U",[["^1J"],["^28","^W"]]],"^[",["^U",[null,null]]],"^Y",["^U",[["^1J"],["^28","^W"]]],"^Z",null,"^1<",2,"^[",["^U",[null,null]],"^Q",1,"^10",false,"^1>",[["^ ","^1<",1,"^10",false,"^1?","^12"],["^ ","^1<",2,"^10",false,"^1?","^12"]],"^P",233,"^R",233,"^13",2,"^14",true,"^T",["^U",[["^1J"],["^28","^W"]]]]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^7",["~:y","~:else","~:argument","~:hex","~:modulus","~:x","~:encoded-key"]],"~:order",["^2>","^2?","^2A","~:x","~:y","^2B","^2@"]],"^16",null]