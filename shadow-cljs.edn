{:deps {:aliases [:dev]}

 :dev-http {8000 "out/browser"}

 :builds
 {:cljs-node-test ; runs the cljs tests on node
  {:target           :node-test
   :output-to        "out/nodejs-test/node-tests.js"
   :autorun          true
   :compiler-options {:infer-externs true ; prevents "could not infer" compiler warnings
                      :optimizations :simple
                      :externs       ["sjcl-externs.js"]}}

  :cljs-browser-test ; runs the cljs tests in the browser via karma
  {:target           :karma
   :compiler-options {:infer-externs true
                      :externs       ["sjcl-externs.js"]
                      :pseudo-names  true}
   :output-to        "out/browser-test/browser-tests.js"}

  ;; CommonJS build for Node.js
  :node-commonjs
  {:target           :node-library
   :output-to        "dist/nodejs-cjs/fluree-crypto.cjs"
   :exports          {:normalizeString      fluree.crypto/normalize-string
                      :stringToByteArray    fluree.crypto/string->byte-array
                      :byteArrayToString    fluree.crypto/byte-array->string
                      :sha2_256             fluree.crypto-js/sha2-256
                      :sha2_256_normalize   fluree.crypto-js/sha2-256-normalize
                      :sha2_512             fluree.crypto-js/sha2-512
                      :sha2_512_normalize   fluree.crypto-js/sha2-512-normalize
                      :aesEncrypt           fluree.crypto-js/aes-encrypt
                      :aesDecrypt           fluree.crypto-js/aes-decrypt
                      :generateKeyPair      fluree.crypto-js/generate-key-pair
                      :accountIdFromPublic  fluree.crypto/account-id-from-public
                      :accountIdFromPrivate fluree.crypto/account-id-from-private
                      :didKeyFromPublic     fluree.crypto/did-key-from-public
                      :publicKeyFromPrivate fluree.crypto/public-key-from-private
                      :signMessage          fluree.crypto-js/sign-message
                      :verifySignature      fluree.crypto-js/verify-signature
                      :randomBytes          fluree.crypto/random-bytes
                      :createJWS            fluree.crypto-js/create-jws
                      :verifyJWS            fluree.crypto-js/verify-jws}
   :compiler-options {:infer-externs true}}

  :browser
  {:target           :esm
   :output-dir       "out/browser/"
   :build-hooks      [(shadow.cljs.build-report/hook)]
   :compiler-options {:infer-externs true
                      :externs       ["sjcl-externs.js"]}
   :modules          {:fluree-crypto
                      {:exports
                       ;; wish we didn't have to repeat this here, but we do
                       {normalizeString      fluree.crypto/normalize-string
                        stringToByteArray    fluree.crypto/string->byte-array
                        byteArrayToString    fluree.crypto/byte-array->string
                        sha2_256             fluree.crypto-js/sha2-256
                        sha2_256_normalize   fluree.crypto-js/sha2-256-normalize
                        sha2_512             fluree.crypto-js/sha2-512
                        sha2_512_normalize   fluree.crypto-js/sha2-512-normalize
                        sha3_256             fluree.crypto-js/sha3-256
                        sha3_256_normalize   fluree.crypto-js/sha3-256-normalize
                        sha3_512             fluree.crypto-js/sha3-512
                        sha3_512_normalize   fluree.crypto-js/sha3-512-normalize
                        ripemd_160           fluree.crypto-js/ripemd-160
                        aesEncrypt           fluree.crypto-js/aes-encrypt
                        aesDecrypt           fluree.crypto-js/aes-decrypt
                        generateKeyPair      fluree.crypto-js/generate-key-pair
                         accountIdFromPublic  fluree.crypto/account-id-from-public
                        accountIdFromPrivate fluree.crypto/account-id-from-private
                        didKeyFromPublic     fluree.crypto/did-key-from-public
                        signMessage          fluree.crypto/sign-message
                        verifySignature      fluree.crypto/verify-signature
                        randomBytes          fluree.crypto/random-bytes
                        createJWS            fluree.crypto/create-jws
                        verifyJWS            fluree.crypto-js/verify-jws}}}}
                        
  :node
  {:target           :esm
   :output-dir       "out/nodejs"
   :runtime          :node
   :modules          {:fluree-crypto 
                      {:exports {normalizeString      fluree.crypto/normalize-string
                                 stringToByteArray    fluree.crypto/string->byte-array
                                 byteArrayToString    fluree.crypto/byte-array->string
                                 sha2_256             fluree.crypto-js/sha2-256
                                 sha2_256_normalize   fluree.crypto-js/sha2-256-normalize
                                 sha2_512             fluree.crypto-js/sha2-512
                                 sha2_512_normalize   fluree.crypto-js/sha2-512-normalize
                                 aesEncrypt           fluree.crypto-js/aes-encrypt
                                 aesDecrypt           fluree.crypto-js/aes-decrypt
                                 generateKeyPair      fluree.crypto-js/generate-key-pair
                                 accountIdFromPublic  fluree.crypto/account-id-from-public
                                 accountIdFromPrivate fluree.crypto/account-id-from-private
                                 didKeyFromPublic     fluree.crypto/did-key-from-public
                                 publicKeyFromPrivate fluree.crypto/public-key-from-private
                                 signMessage          fluree.crypto-js/sign-message
                                 verifySignature      fluree.crypto-js/verify-signature
                                 randomBytes          fluree.crypto/random-bytes
                                 createJWS            fluree.crypto-js/create-jws
                                 verifyJWS            fluree.crypto-js/verify-jws}}}
   :compiler-options {:infer-externs true}}}}
